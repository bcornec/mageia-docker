#!/bin/bash
#
# Create a Mageia Docker Image if needed and instantiate a container out of it
#

# Detect force mode
if [ _"$1" = _"-f" ]; then
	FORCE=1
	shift
fi

# Support passing the distro to operate on as parameter
if [ _"$1" != _"" ]; then
	MGAVER=$1
fi

APPNAME=${APPNAME:=mageia-docker}

# Support variable definitions from our own env
if [ -f $HOME/.$APPNAME ]; then
	. $HOME/.$APPNAME
fi

# Default distro to consider
MGAVER=${MGAVER:=cauldron}
# Default temporary directory
TMPDM=${TMPDM:=$HOME/tmp/$APPNAME}
# Default mirror
MGAMIRROR=${MGAMIRROR:=http://distrib-coffee.ipsl.jussieu.fr/pub/linux/Mageia/distrib}
# Default Working directory where you svn co mageia-pkg
WORKDIR=${WORKDIR:=$HOME/mageia}
# Default architecture
MGAARCH=${MGAARCH:=x86_64}

mkdir -p $TMPDM
cd $TMPDM

MUID=`getent passwd $USER | cut -d: -f3`
MGID=`getent passwd $USER | cut -d: -f4`

DCKSRCIMG=${DCKSRCIMG:=mageia:$MGAVER}
#DCKBUILDIMG=mageiaofficial:$MGAVER-$MGAARCH
DCKBUILDIMG=pb:mageiabuild$MGAVER-$MGAARCH

# Build the Dockerfile
cat > Dockerfile << EOF
# Start from a good known image
FROM $DCKSRCIMG
MAINTAINER bcornec@mageia.org
# In case there is an issue with that mirror
#RUN perl -pi -e 's|http://distro.ibiblio.org/mageia|$MGAMIRROR|' /etc/urpmi/urpmi.cfg
# Point to the mirror we want
# Not useful if using mageiaofficial:$MGAVER-$MGAARCH
RUN urpmi.removemedia -a
RUN urpmi.addmedia --probe-hdlist --distrib mga $MGAMIRROR/$MGAVER/$MGAARCH
# Update metadata just in case 2 previous lines are not used
RUN echo "urpmi.update -a -c -f" > /usr/local/bin/upd
# Update packages
RUN echo "urpmi --auto --auto-select --no-recommends" >> /usr/local/bin/upd
RUN chmod 755 /usr/local/bin/upd
RUN /usr/local/bin/upd
# install what we need to work
RUN urpmi --auto --no-recommends bm subversion mgarepo colordiff sudo
# if dnf is installed fix repo:
#RUN perl -pi -e 's|mirrorlist=|#mirrorlist=|' /etc/yum.repos.d/*.repo
#RUN perl -pi -e 's|#baseurl=https://mirrors.kernel.org/mageia/distrib|baseurl=$MGAMIRROR|' /etc/yum.repos.d/*.repo
#RUN dnf makecache
# Fix group id
RUN sed -i "s/users:x:.*$/users:x:$MGID/" /etc/group
# Add ourselves to the image
RUN useradd $USER -u $MUID -g $MGID -N -M -d $HOME
# give us sudo power
RUN echo "$USER   ALL=(ALL)       NOPASSWD:ALL" >> /etc/sudoers
# prepare home mount point
RUN mkdir -p $HOME
WORKDIR $WORKDIR
USER $USER
CMD /bin/bash
EOF

# Check whether the image already exist
stat=0
docker inspect $DCKBUILDIMG 2>&1 > /dev/null
if [ $? -eq 0 ]; then
	# remove it if we force with -f
	if [ "$FORCE" = "1" ]; then
		docker rmi $DCKBUILDIMG
	fi
else
	# Build it as it doesn't exist yet
	docker build --file=Dockerfile -t $DCKBUILDIMG .
	stat=$?
fi
if [ $stat -eq 0 ]; then
	docker run --rm -v "$SSH_AUTH_SOCK":/ssh-agent -v $HOME:$HOME -v /var/run/libvirt:/var/run/libvirt -e SSH_AUTH_SOCK=/ssh-agent -ti -u $USER -w $WORKDIR $DCKBUILDIMG
fi
